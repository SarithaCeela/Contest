//Birthday gift
Birthday Gift (Contest)
easy
Time Limit: 2 sec
Memory Limit: 128000 kB
Problem Statement
Newton being a student of science gifted an nXn matrix to his girlfriend on her birthday and challenge her to solve the matrix. The matrix consists of natural numbers up to 500(1 ≤ n ≤ 500). Newton instructed a few things about matrix to his girlfriend. He said there are two types of symbols on the matrix( L and R ), you need to rotate the matrix 90 degrees to the left for every L symbol and rotate the matrix 90 degrees right for every R symbol. The symbols were only 3 characters in length.
Help Newton's girlfriend to display the final matrix at the end of the complete turns.
Input
The first line consists of one integer n - the size of the matrix.
In the next n lines, you are given n integers, numbers can range from 1 to 500.

Constraints
1 ≤ n ≤ 500
Output
Output the final matrix n X n.

Note You should not print any whitespace or newline if it is not necessary.
Example
Sample input:
2
1 2
3 4
RLR

Sample output:
3 1
4 2

import java.io.*; // for handling input/output

import java.util.*; // contains Collections framework

class Main {

    public static void main (String[] args) {

        Scanner s = new Scanner(System.in);

        int n = s.nextInt();

        int[][] arr = new int[n][n];

        for(int i=0;i<n;i++){

            for(int j=0;j<n;j++){

                arr[i][j] = s.nextInt();

            }

        }

        String str = s.next();

        int l = 0;

        int r = 0 ;

        for(int i=0;i<str.length();i++){

            if(str.charAt(i) == 'R'){

                r++;

            }else if(str.charAt(i) == 'L'){

                l++;

            }

        }

        if( l > r){

            for(int i=0;i<l-r;i++){

                arr = rotateLeft(arr);

            }

        } else if( l < r){

            for(int i=0;i<r-l;i++){

                arr = rotateRight(arr);

            }

        }

        for(int i=0;i<n;i++){

            for(int j=0;j<n;j++){

                System.out.print(arr[i][j]+" ");

            }

            System.out.println();

        }


 

    }

    public static int[][] rotateLeft(int[][] matrix){

        int[][] result = new int[matrix.length][matrix.length];

        for (int i=0;i<matrix.length;i++){

            for(int j=0;j<matrix.length;j++){

                result[matrix.length-j-1][i] = matrix[i][j];

            }

        }

        return result;

    }

    public static int[][] rotateRight(int[][] matrix){

        int[][] result = new int[matrix.length][matrix.length];

        for (int i=0;i<matrix.length;i++){

            for(int j=0;j<matrix.length;j++){

                result[j][matrix.length -  i - 1] = matrix[i][j];

            }

        }

        return result;

    }

}
